name: Build and Release Windows Application

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  release:
    types: [created] # Optionally trigger on release creation

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Specify the Go version you are using

      # Step 3: Build the Go application for Windows
      - name: Build Windows executable
        run: |
          GOOS=windows GOARCH=amd64 go build -o subnet-calculator.exe ./main.go
        env:
          CGO_ENABLED: 0 # Disable CGO for cross-compilation

      # Step 4: Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # Use the PAT stored in secrets
        with:
          tag_name: v${{ github.run_number }} # Use the run number as the tag
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      # Step 5: Upload the built executable to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          token: ${{ secrets.GH_PAT }}  

